# Sergas Super Account Manager - Production Environment Configuration
# Template for production deployment
# Copy to .env.production and fill in actual values
# NEVER commit .env.production to version control

# ===================================
# Environment
# ===================================
ENV=production
VERSION=${GIT_COMMIT_SHA}
DEPLOYMENT_ENVIRONMENT=production

# ===================================
# Application
# ===================================
APP_NAME=sergas-super-account-manager
APP_HOST=0.0.0.0
APP_PORT=8000
WORKERS=4
LOG_LEVEL=INFO
DEBUG=false
ENABLE_METRICS=true
ENABLE_PROFILING=false

# ===================================
# Security
# ===================================
# Generate with: openssl rand -hex 32
SECRET_KEY=${AWS_SECRETS_MANAGER:sergas/production/secret-key}
JWT_SECRET=${AWS_SECRETS_MANAGER:sergas/production/jwt-secret}
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# CORS Configuration
CORS_ORIGINS=https://app.sergas-agents.com,https://sergas-agents.com
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,PATCH
CORS_HEADERS=Content-Type,Authorization

# ===================================
# Database (PostgreSQL)
# ===================================
# Primary database (writes)
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}
DATABASE_HOST=${AWS_RDS_ENDPOINT}
DATABASE_PORT=5432
DATABASE_NAME=sergas_agent_db
DATABASE_USER=sergas_user
DATABASE_PASSWORD=${AWS_SECRETS_MANAGER:sergas/production/db-password}

# Read replica (optional, for read-heavy queries)
DATABASE_READ_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_READ_REPLICA_HOST}:5432/${DB_NAME}

# Connection pool settings
DATABASE_POOL_SIZE=50
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600
DATABASE_ECHO=false

# SSL/TLS
DATABASE_SSL_MODE=require
DATABASE_SSL_CA=/etc/ssl/certs/rds-ca-2019-root.pem

# ===================================
# Redis Cache
# ===================================
REDIS_URL=redis://${REDIS_HOST}:6379/0
REDIS_HOST=${AWS_ELASTICACHE_ENDPOINT}
REDIS_PORT=6379
REDIS_PASSWORD=${AWS_SECRETS_MANAGER:sergas/production/redis-password}
REDIS_DB=0
REDIS_MAX_CONNECTIONS=100
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# Session configuration
SESSION_TTL=7200  # 2 hours
APPROVAL_TTL=3600  # 1 hour

# ===================================
# Anthropic Claude API
# ===================================
ANTHROPIC_API_KEY=${AWS_SECRETS_MANAGER:sergas/production/anthropic-api-key}
ANTHROPIC_MODEL=claude-sonnet-4.5-20250929
ANTHROPIC_MAX_TOKENS=4096
ANTHROPIC_TEMPERATURE=0.7
ANTHROPIC_TIMEOUT=60

# Rate limiting for Claude API
ANTHROPIC_RATE_LIMIT_REQUESTS=100
ANTHROPIC_RATE_LIMIT_WINDOW=60

# ===================================
# Zoho CRM Integration
# ===================================
# OAuth credentials
ZOHO_CLIENT_ID=${AWS_SECRETS_MANAGER:sergas/production/zoho-client-id}
ZOHO_CLIENT_SECRET=${AWS_SECRETS_MANAGER:sergas/production/zoho-client-secret}
ZOHO_REDIRECT_URI=https://api.sergas-agents.com/auth/zoho/callback
ZOHO_REFRESH_TOKEN=${AWS_SECRETS_MANAGER:sergas/production/zoho-refresh-token}

# Zoho environment
ZOHO_ENVIRONMENT=production
ZOHO_DATA_CENTER=us
ZOHO_API_DOMAIN=https://www.zohoapis.com

# Three-tier integration strategy
ZOHO_MCP_ENABLED=true
ZOHO_SDK_ENABLED=true
ZOHO_REST_ENABLED=true

# Rate limiting (per tier)
ZOHO_MCP_RATE_LIMIT=100
ZOHO_SDK_RATE_LIMIT=200
ZOHO_REST_RATE_LIMIT=50

# Timeouts (seconds)
ZOHO_MCP_TIMEOUT=30
ZOHO_SDK_TIMEOUT=45
ZOHO_REST_TIMEOUT=30

# Circuit breaker configuration
ZOHO_CIRCUIT_BREAKER_ENABLED=true
ZOHO_CIRCUIT_BREAKER_THRESHOLD=5
ZOHO_CIRCUIT_BREAKER_TIMEOUT=60

# ===================================
# Cognee Knowledge Graph
# ===================================
COGNEE_API_KEY=${AWS_SECRETS_MANAGER:sergas/production/cognee-api-key}
COGNEE_API_URL=https://api.cognee.ai
COGNEE_TIMEOUT=30

# Knowledge graph configuration
COGNEE_EMBEDDING_MODEL=text-embedding-ada-002
COGNEE_GRAPH_DATABASE=neo4j
COGNEE_VECTOR_DATABASE=lancedb

# ===================================
# Monitoring & Observability
# ===================================
# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus

# Grafana
GRAFANA_URL=https://grafana.sergas-agents.com
GRAFANA_API_KEY=${AWS_SECRETS_MANAGER:sergas/production/grafana-api-key}

# Structured logging
LOG_FORMAT=json
LOG_STRUCTURED=true
LOG_CORRELATION_ID=true

# OpenTelemetry (optional)
OTEL_ENABLED=false
OTEL_ENDPOINT=https://otel-collector.sergas-agents.com
OTEL_SERVICE_NAME=sergas-super-account-manager
OTEL_TRACE_SAMPLING_RATE=0.1

# ===================================
# AWS Integration
# ===================================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}  # From IAM role
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}  # From IAM role

# S3 for file storage
AWS_S3_BUCKET=sergas-production-data
AWS_S3_PREFIX=super-account-manager/

# Secrets Manager
AWS_SECRETS_MANAGER_ENABLED=true
AWS_SECRETS_MANAGER_PREFIX=sergas/production/

# Parameter Store (alternative)
AWS_SSM_PARAMETER_STORE_ENABLED=false

# ===================================
# Email/Notifications (Optional)
# ===================================
EMAIL_ENABLED=false
EMAIL_PROVIDER=ses
EMAIL_FROM=noreply@sergas-agents.com
EMAIL_REPLY_TO=support@sergas-agents.com

# AWS SES
AWS_SES_REGION=us-east-1
AWS_SES_CONFIGURATION_SET=sergas-emails

# ===================================
# Rate Limiting
# ===================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_STRATEGY=sliding-window

# API rate limits (per user)
RATE_LIMIT_API_REQUESTS=100
RATE_LIMIT_API_WINDOW=60

# Agent execution rate limits
RATE_LIMIT_AGENT_EXECUTIONS=50
RATE_LIMIT_AGENT_WINDOW=300

# ===================================
# Feature Flags
# ===================================
FEATURE_FLAG_APPROVAL_WORKFLOW=true
FEATURE_FLAG_MEMORY_ANALYST=true
FEATURE_FLAG_AUTO_RECOMMENDATIONS=true
FEATURE_FLAG_ZOHO_WRITE_OPERATIONS=true
FEATURE_FLAG_SSE_EVENTS=false  # Not yet implemented

# ===================================
# Performance Tuning
# ===================================
# Worker processes
WORKER_CLASS=uvicorn.workers.UvicornWorker
WORKER_TIMEOUT=120
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=100

# Connection limits
MAX_CONCURRENT_CONNECTIONS=1000
MAX_KEEPALIVE_CONNECTIONS=100

# Request timeouts
REQUEST_TIMEOUT=60
KEEPALIVE_TIMEOUT=5

# ===================================
# Security Headers
# ===================================
SECURITY_HEADERS_ENABLED=true
HSTS_ENABLED=true
HSTS_MAX_AGE=31536000
CSP_ENABLED=true
CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'

# ===================================
# Backup & Disaster Recovery
# ===================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM UTC
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=sergas-production-backups

# ===================================
# Deployment Metadata
# ===================================
DEPLOYMENT_TIMESTAMP=${DEPLOYMENT_TIMESTAMP}
DEPLOYMENT_VERSION=${VERSION}
DEPLOYMENT_ENVIRONMENT=production
DEPLOYED_BY=${DEPLOYER_EMAIL}
GIT_COMMIT_SHA=${GIT_COMMIT_SHA}
GIT_BRANCH=${GIT_BRANCH}

# ===================================
# Health Checks
# ===================================
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
READINESS_CHECK_PATH=/health/ready
LIVENESS_CHECK_PATH=/health/live

# ===================================
# Graceful Shutdown
# ===================================
GRACEFUL_SHUTDOWN_TIMEOUT=30
SHUTDOWN_WAIT_FOR_CONNECTIONS=true

# ===================================
# Custom Application Settings
# ===================================
# Review cycle configuration
DEFAULT_REVIEW_CYCLE=daily
REVIEW_SCHEDULE_DAILY=0 5 * * *  # 5 AM UTC
REVIEW_SCHEDULE_WEEKLY=0 5 * * 1  # Mondays at 5 AM UTC

# Agent configuration
AGENT_TIMEOUT=300
AGENT_MAX_RETRIES=3
AGENT_RETRY_BACKOFF=exponential

# Approval workflow
APPROVAL_TIMEOUT=3600  # 1 hour
APPROVAL_MAX_PENDING=1000
APPROVAL_AUTO_REJECT_AFTER=86400  # 24 hours

# Memory persistence
MEMORY_SYNC_ENABLED=true
MEMORY_SYNC_INTERVAL=3600  # 1 hour
MEMORY_BATCH_SIZE=100
