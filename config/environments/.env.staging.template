# Sergas Super Account Manager - Staging Environment Configuration
# Template for staging deployment
# Copy to .env.staging and fill in actual values

# ===================================
# Environment
# ===================================
ENV=staging
VERSION=${GIT_COMMIT_SHA}
DEPLOYMENT_ENVIRONMENT=staging

# ===================================
# Application
# ===================================
APP_NAME=sergas-super-account-manager-staging
APP_HOST=0.0.0.0
APP_PORT=8000
WORKERS=2  # Fewer workers than production
LOG_LEVEL=DEBUG
DEBUG=true  # Enable debug mode in staging
ENABLE_METRICS=true
ENABLE_PROFILING=true

# ===================================
# Security (Less restrictive than production)
# ===================================
SECRET_KEY=${STAGING_SECRET_KEY}
JWT_SECRET=${STAGING_JWT_SECRET}
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=48  # Longer expiration for testing

# CORS Configuration (more permissive)
CORS_ORIGINS=http://localhost:3000,https://staging.sergas-agents.com,https://staging-app.sergas-agents.com
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_HEADERS=*

# ===================================
# Database (PostgreSQL)
# ===================================
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${STAGING_DB_HOST}:5432/${DB_NAME}
DATABASE_HOST=${STAGING_DB_HOST}
DATABASE_PORT=5432
DATABASE_NAME=sergas_agent_db_staging
DATABASE_USER=sergas_staging
DATABASE_PASSWORD=${STAGING_DB_PASSWORD}

# Connection pool settings (smaller than production)
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600
DATABASE_ECHO=true  # Enable SQL logging

# SSL/TLS (may be disabled for local testing)
DATABASE_SSL_MODE=prefer

# ===================================
# Redis Cache
# ===================================
REDIS_URL=redis://${STAGING_REDIS_HOST}:6379/0
REDIS_HOST=${STAGING_REDIS_HOST}
REDIS_PORT=6379
REDIS_PASSWORD=${STAGING_REDIS_PASSWORD}
REDIS_DB=0
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# Session configuration (shorter TTL for testing)
SESSION_TTL=3600  # 1 hour
APPROVAL_TTL=1800  # 30 minutes

# ===================================
# Anthropic Claude API
# ===================================
ANTHROPIC_API_KEY=${STAGING_ANTHROPIC_API_KEY}
ANTHROPIC_MODEL=claude-sonnet-4.5-20250929
ANTHROPIC_MAX_TOKENS=4096
ANTHROPIC_TEMPERATURE=0.7
ANTHROPIC_TIMEOUT=60

# Rate limiting (more lenient)
ANTHROPIC_RATE_LIMIT_REQUESTS=200
ANTHROPIC_RATE_LIMIT_WINDOW=60

# ===================================
# Zoho CRM Integration (Sandbox)
# ===================================
ZOHO_CLIENT_ID=${STAGING_ZOHO_CLIENT_ID}
ZOHO_CLIENT_SECRET=${STAGING_ZOHO_CLIENT_SECRET}
ZOHO_REDIRECT_URI=https://staging-api.sergas-agents.com/auth/zoho/callback
ZOHO_REFRESH_TOKEN=${STAGING_ZOHO_REFRESH_TOKEN}

# Zoho sandbox environment
ZOHO_ENVIRONMENT=sandbox
ZOHO_DATA_CENTER=us
ZOHO_API_DOMAIN=https://sandbox.zohoapis.com

# Three-tier integration strategy
ZOHO_MCP_ENABLED=true
ZOHO_SDK_ENABLED=true
ZOHO_REST_ENABLED=true

# Rate limiting (more lenient)
ZOHO_MCP_RATE_LIMIT=200
ZOHO_SDK_RATE_LIMIT=300
ZOHO_REST_RATE_LIMIT=100

# Timeouts
ZOHO_MCP_TIMEOUT=30
ZOHO_SDK_TIMEOUT=45
ZOHO_REST_TIMEOUT=30

# Circuit breaker configuration
ZOHO_CIRCUIT_BREAKER_ENABLED=true
ZOHO_CIRCUIT_BREAKER_THRESHOLD=10  # More lenient
ZOHO_CIRCUIT_BREAKER_TIMEOUT=30

# ===================================
# Cognee Knowledge Graph
# ===================================
COGNEE_API_KEY=${STAGING_COGNEE_API_KEY}
COGNEE_API_URL=https://api.cognee.ai
COGNEE_TIMEOUT=30

# Knowledge graph configuration
COGNEE_EMBEDDING_MODEL=text-embedding-ada-002
COGNEE_GRAPH_DATABASE=neo4j
COGNEE_VECTOR_DATABASE=lancedb

# ===================================
# Monitoring & Observability
# ===================================
# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus

# Grafana
GRAFANA_URL=https://grafana-staging.sergas-agents.com
GRAFANA_API_KEY=${STAGING_GRAFANA_API_KEY}

# Structured logging
LOG_FORMAT=json
LOG_STRUCTURED=true
LOG_CORRELATION_ID=true

# OpenTelemetry
OTEL_ENABLED=true  # Enable in staging for testing
OTEL_ENDPOINT=https://otel-collector-staging.sergas-agents.com
OTEL_SERVICE_NAME=sergas-super-account-manager-staging
OTEL_TRACE_SAMPLING_RATE=1.0  # 100% sampling in staging

# ===================================
# AWS Integration
# ===================================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

# S3 for file storage
AWS_S3_BUCKET=sergas-staging-data
AWS_S3_PREFIX=super-account-manager/

# Secrets Manager
AWS_SECRETS_MANAGER_ENABLED=true
AWS_SECRETS_MANAGER_PREFIX=sergas/staging/

# ===================================
# Email/Notifications
# ===================================
EMAIL_ENABLED=true
EMAIL_PROVIDER=ses
EMAIL_FROM=staging-noreply@sergas-agents.com
EMAIL_REPLY_TO=staging-support@sergas-agents.com

# AWS SES (sandbox mode)
AWS_SES_REGION=us-east-1
AWS_SES_CONFIGURATION_SET=sergas-emails-staging

# ===================================
# Rate Limiting (More lenient)
# ===================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_STRATEGY=sliding-window

# API rate limits (higher for testing)
RATE_LIMIT_API_REQUESTS=500
RATE_LIMIT_API_WINDOW=60

# Agent execution rate limits
RATE_LIMIT_AGENT_EXECUTIONS=100
RATE_LIMIT_AGENT_WINDOW=300

# ===================================
# Feature Flags (Test new features)
# ===================================
FEATURE_FLAG_APPROVAL_WORKFLOW=true
FEATURE_FLAG_MEMORY_ANALYST=true
FEATURE_FLAG_AUTO_RECOMMENDATIONS=true
FEATURE_FLAG_ZOHO_WRITE_OPERATIONS=true
FEATURE_FLAG_SSE_EVENTS=true  # Enable experimental features

# ===================================
# Performance Tuning
# ===================================
WORKER_CLASS=uvicorn.workers.UvicornWorker
WORKER_TIMEOUT=120
MAX_REQUESTS=500  # Lower than production
MAX_REQUESTS_JITTER=50

# Connection limits
MAX_CONCURRENT_CONNECTIONS=500
MAX_KEEPALIVE_CONNECTIONS=50

# Request timeouts
REQUEST_TIMEOUT=60
KEEPALIVE_TIMEOUT=5

# ===================================
# Security Headers
# ===================================
SECURITY_HEADERS_ENABLED=true
HSTS_ENABLED=false  # Disabled in staging
CSP_ENABLED=true
CSP_POLICY=default-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src *; style-src *

# ===================================
# Backup & Disaster Recovery
# ===================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 3 * * *  # Daily at 3 AM UTC
BACKUP_RETENTION_DAYS=7  # Shorter retention
BACKUP_S3_BUCKET=sergas-staging-backups

# ===================================
# Deployment Metadata
# ===================================
DEPLOYMENT_TIMESTAMP=${DEPLOYMENT_TIMESTAMP}
DEPLOYMENT_VERSION=${VERSION}
DEPLOYMENT_ENVIRONMENT=staging
DEPLOYED_BY=${DEPLOYER_EMAIL}
GIT_COMMIT_SHA=${GIT_COMMIT_SHA}
GIT_BRANCH=${GIT_BRANCH}

# ===================================
# Health Checks
# ===================================
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
READINESS_CHECK_PATH=/health/ready
LIVENESS_CHECK_PATH=/health/live

# ===================================
# Graceful Shutdown
# ===================================
GRACEFUL_SHUTDOWN_TIMEOUT=15  # Shorter than production
SHUTDOWN_WAIT_FOR_CONNECTIONS=true

# ===================================
# Custom Application Settings
# ===================================
# Review cycle configuration
DEFAULT_REVIEW_CYCLE=on_demand  # Manual trigger for testing
REVIEW_SCHEDULE_DAILY=0 6 * * *  # 6 AM UTC
REVIEW_SCHEDULE_WEEKLY=0 6 * * 1

# Agent configuration
AGENT_TIMEOUT=300
AGENT_MAX_RETRIES=3
AGENT_RETRY_BACKOFF=exponential

# Approval workflow
APPROVAL_TIMEOUT=1800  # 30 minutes (shorter for testing)
APPROVAL_MAX_PENDING=500
APPROVAL_AUTO_REJECT_AFTER=43200  # 12 hours

# Memory persistence
MEMORY_SYNC_ENABLED=true
MEMORY_SYNC_INTERVAL=1800  # 30 minutes (more frequent)
MEMORY_BATCH_SIZE=50

# ===================================
# Testing & Development
# ===================================
# Enable test mode features
TEST_MODE=false
MOCK_EXTERNAL_APIS=false  # Set true to use mock Zoho/Cognee
SEED_TEST_DATA=false  # Set true to populate with test data
ENABLE_DEBUG_ENDPOINTS=true  # Enable /debug/* endpoints
