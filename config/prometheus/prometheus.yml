# Sergas Super Account Manager - Prometheus Configuration
# Production-ready metrics collection and alerting
# Generated: 2025-10-19

# ============================================
# Global Configuration
# ============================================
global:
  scrape_interval: 15s          # How frequently to scrape targets
  evaluation_interval: 15s      # How frequently to evaluate rules
  scrape_timeout: 10s           # Timeout for individual scrapes

  # Attach these labels to any time series or alerts
  external_labels:
    cluster: 'sergas-production'
    environment: 'production'
    datacenter: 'primary'
    app: 'sergas-crm'

# ============================================
# Alertmanager Configuration
# ============================================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'
      timeout: 10s
      api_version: v2

# ============================================
# Rule Files
# ============================================
rule_files:
  - '/etc/prometheus/alert_rules.yml'

# ============================================
# Scrape Configurations
# ============================================
scrape_configs:
  # ------------------------------------------
  # Prometheus self-monitoring
  # ------------------------------------------
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          tier: 'monitoring'

  # ------------------------------------------
  # Node Exporter - System metrics
  # ------------------------------------------
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node_exporter:9100']
        labels:
          service: 'node_exporter'
          tier: 'infrastructure'
    metric_relabel_configs:
      # Drop unnecessary metrics to reduce storage
      - source_labels: [__name__]
        regex: 'node_network_.*'
        action: drop
      - source_labels: [__name__]
        regex: 'node_scrape_.*'
        action: drop

  # ------------------------------------------
  # cAdvisor - Container metrics
  # ------------------------------------------
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
          tier: 'infrastructure'
    metric_relabel_configs:
      # Only keep important container metrics
      - source_labels: [__name__]
        regex: 'container_(cpu|memory|network|fs).*'
        action: keep

  # ------------------------------------------
  # Sergas Application - Custom metrics
  # ------------------------------------------
  - job_name: 'sergas_app'
    static_configs:
      - targets: ['host.docker.internal:8000']  # FastAPI app
        labels:
          service: 'sergas_api'
          tier: 'application'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s

  # ------------------------------------------
  # PostgreSQL Exporter - Database metrics
  # ------------------------------------------
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres_exporter:9187']
        labels:
          service: 'postgresql'
          tier: 'database'
          database: 'sergas_crm'
    scrape_interval: 30s

  # ------------------------------------------
  # Redis Exporter - Cache metrics
  # ------------------------------------------
  - job_name: 'redis'
    static_configs:
      - targets: ['redis_exporter:9121']
        labels:
          service: 'redis'
          tier: 'cache'
    scrape_interval: 30s

  # ------------------------------------------
  # Pushgateway - Batch job metrics
  # ------------------------------------------
  - job_name: 'pushgateway'
    honor_labels: true
    static_configs:
      - targets: ['pushgateway:9091']
        labels:
          service: 'pushgateway'
          tier: 'batch'

  # ------------------------------------------
  # Blackbox Exporter - Endpoint monitoring
  # ------------------------------------------
  - job_name: 'blackbox_http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - http://host.docker.internal:8000/health
          - http://host.docker.internal:8000/api/v1/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox_exporter:9115

  # ------------------------------------------
  # Blackbox Exporter - TCP monitoring
  # ------------------------------------------
  - job_name: 'blackbox_tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
          - postgres:5432
          - redis:6379
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox_exporter:9115

  # ------------------------------------------
  # AlertManager - Alert system metrics
  # ------------------------------------------
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
        labels:
          service: 'alertmanager'
          tier: 'monitoring'

# ============================================
# Remote Write Configuration (Optional)
# ============================================
# Uncomment to send metrics to remote storage
# remote_write:
#   - url: https://prometheus-remote-write.example.com/api/v1/write
#     queue_config:
#       capacity: 10000
#       max_shards: 10
#       min_shards: 1
#       max_samples_per_send: 500
#       batch_send_deadline: 5s
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'expensive_metric.*'
#         action: drop
