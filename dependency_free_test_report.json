{
  "timestamp": 1761021423.357322,
  "success_rate": 1.0,
  "status": "EXCELLENT",
  "metrics": {
    "total_lines": 8547,
    "total_size_kb": 309.4150390625,
    "total_classes": 66,
    "total_functions": 169
  },
  "results": {
    "structure": {
      "Dynamic Workflow Engine": {
        "success": true,
        "classes": [
          "WorkflowState",
          "WorkflowPriority",
          "ExecutionMode",
          "AgentCapability",
          "DependencyType",
          "DynamicWorkflowEngine"
        ],
        "functions": [
          "__post_init__",
          "is_ready",
          "can_run_in_parallel",
          "estimate_completion_time",
          "to_dict",
          "__post_init__",
          "get_step_by_id",
          "get_ready_steps",
          "get_execution_groups",
          "calculate_progress",
          "get_critical_path",
          "to_dict",
          "__init__",
          "_meets_criteria",
          "get_workflow_status",
          "get_engine_metrics",
          "register_agent",
          "add_adaptation_rule",
          "__repr__",
          "longest_path"
        ],
        "enums": [],
        "dataclasses": [
          "WorkflowStep",
          "Workflow"
        ],
        "imports": [
          "asyncio",
          "uuid",
          "time",
          "traceback",
          "datetime.datetime",
          "datetime.timedelta",
          "typing.Dict",
          "typing.Any",
          "typing.List",
          "typing.Optional",
          "typing.Set",
          "typing.Tuple",
          "typing.Callable",
          "typing.Union",
          "enum.Enum",
          "dataclasses.dataclass",
          "dataclasses.field",
          "collections.defaultdict",
          "structlog",
          "src.agents.intent_detection.IntentDetectionEngine",
          "src.agents.intent_detection.IntentResult",
          "src.events.ag_ui_emitter.AGUIEventEmitter"
        ],
        "lines": 1450,
        "size_bytes": 50062
      },
      "Enhanced GLM Integration": {
        "success": true,
        "classes": [
          "GLMModel",
          "TaskType",
          "ModelSelectionCriteria",
          "IntelligentModelSelector",
          "GLMRequestConfig",
          "GLMResponse",
          "EnhancedGLMIntegration",
          "Config",
          "Config",
          "Config"
        ],
        "functions": [
          "__post_init__",
          "_get_default_suitability",
          "get_suitability_score",
          "success_rate",
          "average_latency_ms",
          "recent_success_rate",
          "recent_average_latency_ms",
          "update_request",
          "get_health_score",
          "__init__",
          "_initialize_capabilities",
          "_initialize_performance_tracking",
          "select_model",
          "_filter_by_requirements",
          "_score_models",
          "update_model_performance",
          "get_model_performance",
          "get_all_performance",
          "reset_performance_tracking",
          "__init__",
          "get_model_recommendations",
          "get_performance_report"
        ],
        "enums": [],
        "dataclasses": [
          "ModelCapability",
          "ModelPerformance"
        ],
        "imports": [
          "asyncio",
          "time",
          "dataclasses.dataclass",
          "dataclasses.field",
          "enum.Enum",
          "typing.Dict",
          "typing.List",
          "typing.Optional",
          "typing.Any",
          "typing.Union",
          "typing.Tuple",
          "typing.Callable",
          "datetime.datetime",
          "datetime.timedelta",
          "structlog",
          "pydantic.BaseModel",
          "pydantic.Field",
          "httpx",
          "tenacity",
          "collections.defaultdict",
          "collections.deque",
          "os",
          "os",
          "asyncio",
          "json"
        ],
        "lines": 1172,
        "size_bytes": 41669
      },
      "Self Modification System": {
        "success": true,
        "classes": [
          "ModificationType",
          "ModificationRisk",
          "ModificationStatus",
          "SafetyValidator",
          "VersionManager",
          "RollbackManager",
          "SelfModificationSystem"
        ],
        "functions": [
          "__post_init__",
          "_assess_initial_risk",
          "add_approval",
          "is_approved",
          "to_dict",
          "to_dict",
          "__init__",
          "_validate_basic_structure",
          "__init__",
          "get_version",
          "get_agent_versions",
          "get_latest_version",
          "_calculate_file_hash",
          "__init__",
          "_check_file_system_integrity",
          "_check_process_health",
          "_check_network_connectivity",
          "_test_agent_imports",
          "_test_basic_functionality",
          "_test_configuration_loading",
          "__init__",
          "get_proposal",
          "get_active_proposals",
          "get_proposal_history",
          "get_metrics"
        ],
        "enums": [],
        "dataclasses": [
          "ModificationProposal",
          "AgentVersion"
        ],
        "imports": [
          "asyncio",
          "hashlib",
          "json",
          "shutil",
          "uuid",
          "datetime.datetime",
          "datetime.timedelta",
          "enum.Enum",
          "pathlib.Path",
          "typing.Dict",
          "typing.List",
          "typing.Optional",
          "typing.Any",
          "typing.Union",
          "typing.Callable",
          "dataclasses.dataclass",
          "dataclasses.field",
          "structlog",
          "pydantic.BaseModel",
          "pydantic.ValidationError",
          "re",
          "importlib",
          "src.agents.config.get_config"
        ],
        "lines": 1702,
        "size_bytes": 70904
      },
      "Zoho Evolution System": {
        "success": true,
        "classes": [
          "LearningType",
          "EvolutionStrategy",
          "MetricType",
          "FeedbackType",
          "PerformanceTracker",
          "FeedbackProcessor",
          "PatternRecognizer",
          "EvolutionEngine"
        ],
        "functions": [
          "__post_init__",
          "__post_init__",
          "__post_init__",
          "__init__",
          "record_metric",
          "get_agent_performance",
          "get_top_performers",
          "detect_performance_anomalies",
          "_update_agent_summary",
          "_calculate_trend",
          "__init__",
          "process_feedback",
          "get_feedback_summary",
          "get_improvement_suggestions",
          "_analyze_sentiment",
          "_categorize_feedback",
          "_assess_urgency",
          "_update_feedback_patterns",
          "_extract_themes",
          "_extract_insights",
          "_identify_common_themes",
          "_generate_improvement_suggestion",
          "__init__",
          "recognize_patterns",
          "get_agent_patterns",
          "analyze_pattern_evolution",
          "_recognize_performance_patterns",
          "_recognize_feedback_patterns",
          "_recognize_temporal_patterns",
          "_is_improvement_trend",
          "_is_degradation_trend",
          "_is_cyclical_pattern",
          "_calculate_trend_confidence",
          "_calculate_improvement_rate",
          "_calculate_degradation_rate",
          "_estimate_cycle_length",
          "_calculate_simple_trend",
          "__init__",
          "record_performance",
          "record_feedback",
          "get_evolution_status",
          "_determine_evolution_actions",
          "get_evolution_statistics",
          "autocorrelation"
        ],
        "enums": [],
        "dataclasses": [
          "PerformanceMetric",
          "FeedbackData",
          "LearningPattern",
          "EvolutionCheckpoint"
        ],
        "imports": [
          "asyncio",
          "uuid",
          "json",
          "statistics",
          "numpy",
          "datetime.datetime",
          "datetime.timedelta",
          "typing.Dict",
          "typing.Any",
          "typing.List",
          "typing.Optional",
          "typing.Set",
          "typing.Tuple",
          "typing.Union",
          "enum.Enum",
          "dataclasses.dataclass",
          "dataclasses.field",
          "dataclasses.asdict",
          "collections.defaultdict",
          "collections.deque",
          "structlog",
          "pathlib.Path"
        ],
        "lines": 2011,
        "size_bytes": 73893
      },
      "Comprehensive Monitoring": {
        "success": true,
        "classes": [
          "TestType",
          "MonitorType",
          "AlertLevel",
          "TestStatus",
          "HealthStatus",
          "BaseTest",
          "TestRunner",
          "MetricsCollector",
          "AlertRule",
          "NotificationChannel",
          "EmailNotificationChannel",
          "SlackNotificationChannel",
          "WebhookNotificationChannel",
          "AlertManager",
          "HealthCheckProvider",
          "DatabaseHealthCheck",
          "HTTPHealthCheck",
          "SystemHealthCheck",
          "HealthChecker",
          "ComprehensiveMonitoringSystem"
        ],
        "functions": [
          "test",
          "performance_test",
          "integration_test",
          "measure_time",
          "to_dict",
          "to_dict",
          "to_dict",
          "to_dict",
          "__init__",
          "__init__",
          "register_suite",
          "_run_single_test_sync",
          "get_summary",
          "__init__",
          "_init_prometheus_metrics",
          "_init_system_collectors",
          "add_collector",
          "collect_metrics",
          "_collect_cpu_metrics",
          "_collect_memory_metrics",
          "_collect_disk_metrics",
          "_collect_network_metrics",
          "record_http_request",
          "record_workflow_execution",
          "record_agent_task",
          "get_prometheus_metrics",
          "__init__",
          "evaluate",
          "__init__",
          "__init__",
          "_get_color_for_level",
          "__init__",
          "__init__",
          "_init_default_rules",
          "add_rule",
          "add_notification_channel",
          "evaluate_metrics",
          "acknowledge_alert",
          "resolve_alert",
          "get_active_alerts",
          "get_alerts_by_level",
          "get_alert_summary",
          "__init__",
          "__init__",
          "__init__",
          "__init__",
          "_init_default_providers",
          "add_provider",
          "__init__",
          "_init_notification_channels",
          "_init_test_suites",
          "add_custom_test",
          "add_custom_alert_rule",
          "add_custom_metric_collector",
          "decorator",
          "decorator",
          "decorator",
          "decorator"
        ],
        "enums": [],
        "dataclasses": [
          "TestResult",
          "MonitoringMetric",
          "Alert",
          "HealthCheck",
          "TestSuite"
        ],
        "imports": [
          "asyncio",
          "gc",
          "json",
          "os",
          "psutil",
          "random",
          "time",
          "traceback",
          "abc.ABC",
          "abc.abstractmethod",
          "collections.defaultdict",
          "collections.deque",
          "concurrent.futures.ThreadPoolExecutor",
          "concurrent.futures.as_completed",
          "contextlib.asynccontextmanager",
          "dataclasses.dataclass",
          "dataclasses.field",
          "dataclasses.asdict",
          "datetime.datetime",
          "datetime.timedelta",
          "enum.Enum",
          "functools.wraps",
          "typing.Any",
          "typing.AsyncGenerator",
          "typing.Callable",
          "typing.Dict",
          "typing.List",
          "typing.Optional",
          "typing.Tuple",
          "typing.Type",
          "typing.Union",
          "typing.Set",
          "typing.Generator",
          "uuid",
          "httpx",
          "structlog",
          "prometheus_client.Counter",
          "prometheus_client.Gauge",
          "prometheus_client.Histogram",
          "prometheus_client.CollectorRegistry",
          "prometheus_client.generate_latest",
          "prometheus_client.push_to_gateway",
          "prometheus_client.CONTENT_TYPE_LATEST",
          "pydantic.BaseModel",
          "pydantic.ValidationError",
          "tracemalloc"
        ],
        "lines": 2212,
        "size_bytes": 80313
      }
    },
    "architecture": {
      "Dynamic Workflow Engine": {
        "success": true,
        "class_success_rate": 1.0,
        "enum_success_rate": 1.0,
        "missing_classes": []
      },
      "Enhanced GLM Integration": {
        "success": true,
        "class_success_rate": 1.0,
        "enum_success_rate": 1.0,
        "missing_classes": []
      },
      "Self Modification System": {
        "success": true,
        "class_success_rate": 1.0,
        "enum_success_rate": 1.0,
        "missing_classes": []
      },
      "Zoho Evolution System": {
        "success": true,
        "class_success_rate": 1.0,
        "enum_success_rate": 1.0,
        "missing_classes": []
      },
      "Comprehensive Monitoring": {
        "success": true,
        "class_success_rate": 1.0,
        "enum_success_rate": 1.0,
        "missing_classes": []
      }
    },
    "integration": {
      "Workflow + GLM Integration": {
        "success": true,
        "components": [
          "Dynamic Workflow Engine",
          "Enhanced GLM Integration"
        ],
        "description": "Workflow engine should coordinate with GLM model selection"
      },
      "Self-Modification + Evolution": {
        "success": true,
        "components": [
          "Self Modification System",
          "Zoho Evolution System"
        ],
        "description": "Self-modification should support agent evolution"
      },
      "Monitoring + All Components": {
        "success": true,
        "components": [
          "Comprehensive Monitoring"
        ],
        "description": "Monitoring system should track all components"
      }
    },
    "capabilities": {
      "Multi-Agent Orchestration": {
        "success": true,
        "description": "System can coordinate multiple agents",
        "components": [
          "Dynamic Workflow Engine"
        ]
      },
      "Intelligent Model Selection": {
        "success": true,
        "description": "System can select optimal GLM models",
        "components": [
          "Enhanced GLM Integration"
        ]
      },
      "Safe Self-Modification": {
        "success": true,
        "description": "System can modify itself safely",
        "components": [
          "Self Modification System"
        ]
      },
      "Continuous Learning": {
        "success": true,
        "description": "Agents can learn and evolve",
        "components": [
          "Zoho Evolution System"
        ]
      },
      "Comprehensive Monitoring": {
        "success": true,
        "description": "System has complete monitoring",
        "components": [
          "Comprehensive Monitoring"
        ]
      }
    }
  }
}